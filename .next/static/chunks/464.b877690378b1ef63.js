"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[464],{6464:(e,r,t)=>{t.d(r,{walletManager:()=>l});var i=t(1549),n=t(2741),a=t(9646),s=t.n(a);class o{async connect(){try{let e=await s()();if(!e)throw Error("MetaMask not found! Please install MetaMask.");let r=await e.request({method:"eth_requestAccounts"});if(!r||0===r.length)throw Error("No accounts found!");let t=r[0];return this.provider=new i.k(e),this.signer=await this.provider.getSigner(),{isConnected:!0,address:t,provider:this.provider,signer:this.signer}}catch(e){throw console.error("Error connecting wallet:",e),e}}async disconnect(){return this.provider=null,this.signer=null,{isConnected:!1,address:null,provider:null,signer:null}}async getBalance(e){if(!this.provider)throw Error("Provider not connected");let r=await this.provider.getBalance(e);return n.ck(r)}async switchNetwork(e){if(!this.provider)throw Error("Provider not connected");try{await this.provider.send("wallet_switchEthereumChain",[{chainId:e}])}catch(r){if(4902===r.code)await this.addNetwork(e);else throw r}}async addNetwork(e){var r;let t=this.getNetworkConfig(e);await (null==(r=this.provider)?void 0:r.send("wallet_addEthereumChain",[t]))}getNetworkConfig(e){return({"0x1":{chainId:"0x1",chainName:"Ethereum Mainnet",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:["https://mainnet.infura.io/v3/"],blockExplorerUrls:["https://etherscan.io"]},"0x5":{chainId:"0x5",chainName:"Goerli Testnet",nativeCurrency:{name:"Goerli Ether",symbol:"ETH",decimals:18},rpcUrls:["https://goerli.infura.io/v3/"],blockExplorerUrls:["https://goerli.etherscan.io"]},"0xaa36a7":{chainId:"0xaa36a7",chainName:"Sepolia Testnet",nativeCurrency:{name:"Sepolia Ether",symbol:"ETH",decimals:18},rpcUrls:["https://sepolia.infura.io/v3/"],blockExplorerUrls:["https://sepolia.etherscan.io"]}})[e]}getProvider(){return this.provider}getSigner(){return this.signer}constructor(){this.provider=null,this.signer=null}}let l=new o}}]);